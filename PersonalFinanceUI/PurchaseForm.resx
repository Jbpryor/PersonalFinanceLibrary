<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f+P//////H/+P/wP8D/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>